<?xml version="1.0" encoding="utf-8" ?><ControlType>    <FullName>my.k2.controls.ExampleControl, CustomControls</FullName>    <Category>Input</Category>    <Group>Custom</Group>    <Name>ExampleControl</Name>    	<GetValueMethod>my.k2.controls.ExampleControl.getValue</GetValueMethod>    <SetValueMethod>my.k2.controls.ExampleControl.setValue</SetValueMethod>    <GetPropertyMethod>my.k2.controls.ExampleControl.getProperty</GetPropertyMethod>    <SetPropertyMethod>my.k2.controls.ExampleControl.setProperty</SetPropertyMethod>    	<DataTypes>        <DataType>AudoGuid</DataType>        <DataType>AutoNumber</DataType>        <DataType>DateTime</DataType>        <DataType>Decimal</DataType>        <DataType>File</DataType>        <DataType>Guid</DataType>        <DataType>Hyperlink</DataType>        <DataType>Image</DataType>        <DataType>Memo</DataType>        <DataType>MultiValue</DataType>        <DataType>Number</DataType>        <DataType>Text</DataType>        <DataType>Xml</DataType>        <DataType>YesNo</DataType>    </DataTypes>    	<Events>        <Event>OnChange</Event>    </Events>	<DefaultEventName>OnChange</DefaultEventName>    	<Properties>        <Prop ID="ControlName" mappable="false" ValidationPattern="\S" ValidationMessage="InvalidName" DesignerValidate="SourceCode.Forms.Designers.validateControlName" friendlyname="Name" type="string" category="Detail" inputlength="255" />        <Prop ID="Text" setFunction="SetControlText" friendlyname="Text" type="string" category="Detail" refreshdisplay="true" inputlength="255" />        <Prop ID="Field" mappable="false" friendlyname="Field" category="Detail" refreshdisplay="true" ReadOnly="true" />        <Prop ID="DataType" mappable="false" setFunction="SetDataType" friendlyname="Data Type" type="drop" category="Detail" refreshdisplay="true" getDropItemsFunction="getDataTypesForControl" SelectionValue="" SelectionText="" inputlength="255">            <InitialValue>Text</InitialValue>        </Prop>        <Prop ID="WaterMarkText" friendlyname="Watermark" type="string" category="Detail" refreshdisplay="true" inputlength="50">            <InitialValue>Type a value</InitialValue>        </Prop>        <Prop ID="Tooltip" friendlyname="Tooltip" type="string" category="Detail" refreshdisplay="true" inputlength="255" />        <Prop ID="Width" ValidationPattern="^$|^(100|[0-9]{1,2})%?$|^(3276[0-7]|327[0-5]\d|32[0-6]\d{2}|3[0-1]\d{3}|[1-2]\d{4}|[1-9]\d{0,3}|\d){1}(px)?$" ValidationMessage="InvalidWidth" friendlyname="Width" type="string" category="General" refreshdisplay="true"        inputlength="20" setFunction="SetControlWidth" getFunction="GetControlWidth">            <Value>100%</Value>        </Prop>        <Prop ID="IsVisible" friendlyname="Visible" type="bool" category="General" refreshdisplay="true" setFunction="SetControlIsVisible">            <Value>true</Value>        </Prop>        <Prop ID="IsEnabled" friendlyname="Enabled" type="bool" category="General" refreshdisplay="true" setFunction="SetControlIsEnabled">            <Value>true</Value>        </Prop>        <Prop ID="IsReadOnly" friendlyname="Read-Only" type="bool" category="General" refreshdisplay="true" setFunction="SetControlIsReadOnly">            <Value>false</Value>        </Prop>        <Prop ID="MaxLength" ValidationPattern="^(0)+$|^(1000{0,1}|([1-9][0-9]{0,2})){1}$" ValidationMessage="TextInvalidMaxValue" friendlyname="Max Length" type="int" category="Validation" refreshdisplay="true" inputlength="10">            <Value>1</Value>        </Prop>        <Prop ID="ValidationPattern" mappable="false" friendlyname="Pattern" type="complex" category="Validation" InitializeServerControl="initializePatternPropertyConfig" ClearServerControl="clearPropertyConfig" ServerControl="SourceCode.Forms.Controls.Web.PatternConfiguration.PatternPropertyConfig,SourceCode.Forms.Controls.Web"        />        <Prop ID="ValidationMessage" mappable="false" friendlyname="Message" type="string" category="Validation" refreshdisplay="true" inputlength="255" />        <Prop ID="ControlExpression" friendlyname="Expression" type="complex" category="General" DesignerSet="SourceCode.Forms.Designers.View.Conditions._showControlCalculation" />        <Prop ID="Styles" mappable="false" setFunction="SourceCode.Forms.Controls.Web.TextBoxBehavior.prototype.setStyles" friendlyname="Styles" type="complex" category="General" refreshdisplay="true" DesignerSet="SourceCode.Forms.Designers.View.Styles._showEditStyles"        />        <Prop ID="ConditionalStyles" mappable="false" friendlyname="Conditional Styles" type="complex" category="General" refreshdisplay="false" DesignerSet="SourceCode.Forms.Designers.View.Styles._showEditConditionalStyles" />    </Properties>	    <Styles>		<Style isDefault="True">            <Border>				<Default>					<Width></Width>					<Color></Color> 					<Style></Style>				</Default>				<Right>					<Style />					<Width />					<Color />				</Right>				<Left>					<Style />					<Width />					<Color />				</Left>				<Top>					<Style />					<Width />					<Color />				</Top>				<Bottom>					<Style />					<Width />					<Color />				</Bottom>			</Border>			<Margin>				<Default />				<Top />				<Left />				<Bottom />				<Right />			</Margin>			<Padding>				<Default />				<Top />				<Left />				<Bottom />				<Right />			</Padding>			<Font>				<Family />				<Size />				<Color />				<Style />				<Weight />			</Font>			<BackgroundColor />			<Text>				<Decoration />				<Align />			</Text>			<Format />        </Style>    </Styles>	</ControlType>